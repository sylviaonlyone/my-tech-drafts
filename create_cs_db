#!/bin/bash
CS_FILE=cscope.files;
CS_FILE_=cscope.files_;
INPUT_FILES="*.c *.h *.cpp *.hpp"
CSCOPE=cscope

if [ -z $1 ]; then
 echo "- no out put file selected.";
 echo "- usage: ./create_cs_files FILENAME.out";
 exit 0;
fi

## remove the former exist CS_FILE
if [ -f $CS_FILE ]; then
 rm -f $CS_FILE
fi

if [ -f $CS_FILE_ ]; then
 rm -f $CS_FILE_
fi

## remove failed, echo and exit
if [ -f $CS_FILE ]; then
 echo "- $CS_FILE exist!!";
else
 echo "- creating $CS_FILE ...";

 ##
 # there seems to be a bug:
 # - it cannot do a recursive find nested in a for loop.
 #
 # for n in $INPUT_FILES; do
 #   find $PWD ! -type l -a -name "$n" | sort -u >> $CS_FILE;
 # done

#  grep -v $PWD/include $CS_FILE_ | sort -u > $CS_FILE
#  grep $PWD/include $CS_FILE_ | grep -v '.h' | sort -u >> $CS_FILE
#  grep $PWD/include $CS_FILE_ | grep '.h' | grep '.hi' | sort -u >> $CS_FILE
#  rm -f $CS_FILE_
 find $PWD ! -type l -a -name "*.c" >> $CS_FILE_;
 find $PWD ! -type l -a -name "*.cpp" >> $CS_FILE_;
 find $PWD ! -type l -a -name "*.h" >> $CS_FILE_;
 find $PWD ! -type l -a -name "*.hpp" >> $CS_FILE_;
 cat $CS_FILE_ | sort -u > $CS_FILE;
 rm -f $CS_FILE_
fi

if [ -f $1 ]; then
 echo "- $1 exist!! If you want to update the file, please remove it first.";
else
 if [ -f $CS_FILE ]; then
    echo "- creating $1 ...";
    $CSCOPE -kbqR -i $CS_FILE -f $1;
    if [ -f $1 ]; then
     echo "- success!!";
    else
     echo "- W: failed to generate $1!!";
     exit 1;
    fi
 else
    echo "- W: failed to generate $CS_FILE!!";
    exit 1;
 fi
fi

## exit successfully!
exit 0;
